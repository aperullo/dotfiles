#!/bin/bash

# Save this file as ~/.config/yadm/bootstrap and make it executable. It will
# execute all executable files (excluding templates and editor backups) in the
# ~/.config/yadm/bootstrap.d directory when run.
# Optionally, pass a filename as the first argument to run only that file.

# Directory to look for bootstrap executables in
BOOTSTRAP_D="${BASH_SOURCE[0]}.d"

check_bootstrap_dir() {
    if [[ ! -d "$BOOTSTRAP_D" ]]; then
        echo "Error: bootstrap directory '$BOOTSTRAP_D' not found" >&2
        return 1
    fi
    return 0
}

run_bootstrap_file() {
    local file="$1"
    if [[ ! -f "$file" ]]; then
        echo "Error: bootstrap file '$file' not found" >&2
        return 1
    fi
    if [[ ! -x "$file" ]]; then
        echo "Error: bootstrap file '$file' is not executable" >&2
        return 2
    fi
    echo "Running $file"
    "$file"
    local status=$?
    if [[ $status != 0 ]]; then
        echo "Error: bootstrap '$file' failed" >&2
        return 3
    fi
    return 0
}

run_all_bootstraps() {
    local status=0
    while IFS= read -r bootstrap; do
        if [[ -x "$bootstrap" && ! "$bootstrap" =~ "##" && ! "$bootstrap" =~ "~$" ]]; then
            echo "Running $bootstrap"
            "$bootstrap"
            local rc=$?
            if [[ $rc != 0 ]]; then
                echo "Error: bootstrap '$bootstrap' failed" >&2
                status=1
                break
            fi
        fi
    done < <(find -L "$BOOTSTRAP_D" -type f | sort) # Process substitution so $status's value persists outside loop. Otherwise its value is lost to the subshell. 
    return $status
}

main() {
    source "$(dirname "$(realpath "$0")")/funcs"
    is_installed "yadm"
    check_bootstrap_dir
    if [[ $? != 0 ]]; then exit 1; fi

    if [[ $# != 0 ]]; then
        run_bootstrap_file "$BOOTSTRAP_D/$1"
        if [[ $? != 0 ]]; then exit 1; fi
    else
        run_all_bootstraps
        if [[ $? != 0 ]]; then exit 1; fi
    fi
}

main "$@"
